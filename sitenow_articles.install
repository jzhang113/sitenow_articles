<?php
/**
 * @file
 *
 * Install and uninstall tasks for SiteNow Articles
 */

/**
 * Implements hook_enable().
 */
function sitenow_articles_enable() {
  // Revert the sitenow_articles feature.
  $feature = features_get_features('sitenow_articles');
  $components = array_keys($feature->info['features']);
  features_revert(array('sitenow_articles' => $components));
}

/**
 * Implements hook_disable().
 */
function sitenow_articles_disable() {
  // Gather all the content that might have been created while this
  // module was enabled. Simple selects still use db_query().
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'article'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // Delete all the nodes at once.
  node_delete_multiple($nids);

  // Loop over each of the fields used by only the article content type and
  // delete all instances of the field, their data, and the field itself.
  foreach (field_info_field_map() as $field_name => $field_info) {
    if (array_key_exists('node', $field_info['bundles'])) {
      if (in_array('article', $field_info['bundles']['node'])) {        
        if (count($field_info['bundles']['node'] == 1)) {
          field_delete_field($field_name);
        }
      }
    }
  }

  // Loop over any remaining field instances attached to the article content 
  // type and delete them individually.
  $instances = field_info_instances('node', 'article');
  foreach ($instances as $instance_name => $instance) {
    field_delete_instance($instance);
  }

  // Delete the article content type.
  node_type_delete('article');

  // Delete the tags taxonomy.
  $vid = db_query("SELECT vid FROM {taxonomy_vocabulary} WHERE machine_name = 'tags'")->fetchField();
  taxonomy_vocabulary_delete($vid);

  // Purge all field information.
  field_purge_batch(1000);

  // Disable submodules of SiteNow Articles
  $module_list = array('sitenow_articles_panelizer', 'sitenow_articles_panels',);
  $disable_dependents = FALSE;
  module_disable($module_list, $disable_dependents);
}
